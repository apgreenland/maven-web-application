def sendSlackNotifications(String buildStatus = 'STARTED'){
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED'){
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS'){
    color = 'GREEN'
    colorCode = '#00FF00'
  } else{
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


node{
try{

echo "Job Name is: ${env.JOB_NAME}"
echo "Node name is: ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

def mavenHome = tool name: 'maven3.8.5'

//get the code from the github repository
stage('CheckOutCode'){
git branch: 'development', credentialsId: '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', url: 'https://github.com/apgreenland/maven-web-application.git'
}
//do the build using maven tools
stage('DoTheBuild'){
sh "${mavenHome}/bin/mvn clean package"
}

/*

//Execute the sonarquebReport
stage('ExecuteSonarReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//Artifact Repository into Nexus
stage('UploadArtifactRepointoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}

//Deploy Application into Tomcat Server
stage('DeployApplicationintoTomacate'){
sshagent(['84f9d605-085a-4234-a030-a7e3a9038064']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.233.251.73:/opt/apache-tomcat-9.0.62/webapps/"
}

}
*/
} //TryClosing
catch(e){
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
  } finally {
    // Success or failure, always send notifications
    sendSlackNotifications(currentBuild.result)
  }
} //NodeClosing
